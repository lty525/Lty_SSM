<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="cn.itcast.domain.Orders">
  <id column="ID" jdbcType="VARCHAR" property="id" />
  <result column="ORDERNUM" jdbcType="VARCHAR" property="ordernum" />
  <result column="ORDERTIME" jdbcType="TIMESTAMP" property="ordertime" />
  <result column="PEOPLECOUNT" jdbcType="DECIMAL" property="peoplecount" />
  <result column="ORDERDESC" jdbcType="VARCHAR" property="orderdesc" />
  <result column="PAYTYPE" jdbcType="DECIMAL" property="paytype" />
  <result column="ORDERSTATUS" jdbcType="DECIMAL" property="orderstatus" />
  <result column="PRODUCTID" jdbcType="VARCHAR" property="productid" />
  <result column="MEMBERID" jdbcType="VARCHAR" property="memberid" />

</resultMap>
  <resultMap id="selectOP" type="cn.itcast.domain.Orders">
  <id column="ID" jdbcType="VARCHAR" property="id" />
  <result column="ORDERNUM" jdbcType="VARCHAR" property="ordernum" />
  <result column="ORDERTIME" jdbcType="TIMESTAMP" property="ordertime" />
  <result column="PEOPLECOUNT" jdbcType="DECIMAL" property="peoplecount" />
  <result column="ORDERDESC" jdbcType="VARCHAR" property="orderdesc" />
  <result column="PAYTYPE" jdbcType="DECIMAL" property="paytype" />
  <result column="ORDERSTATUS" jdbcType="DECIMAL" property="orderstatus" />
  <result column="PRODUCTID" jdbcType="VARCHAR" property="productid" />
  <result column="MEMBERID" jdbcType="VARCHAR" property="memberid" />
  <association property="product" column="productid"
               javaType="cn.itcast.domain.Product" select="cn.itcast.dao.ProductMapper.selectByPrimaryKey">
    <!-- <result property="productname" column="productname"></result>
     <result property="productprice" column="productprice"></result>-->
  </association>
</resultMap>
  <select id="findAll" resultMap="selectOP">
--       select o.* , p.productname , p.productprice from  Orders o , product p where o.productid = p.id
      select * from  Orders
  </select>
  <delete id="deleteOrdersTravel">
    delete from order_traveller where orderid=#{id}
  </delete>
  <resultMap id="findByid" type="cn.itcast.domain.Orders">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ORDERNUM" jdbcType="VARCHAR" property="ordernum" />
    <result column="ORDERTIME" jdbcType="TIMESTAMP" property="ordertime" />
    <result column="PEOPLECOUNT" jdbcType="DECIMAL" property="peoplecount" />
    <result column="ORDERDESC" jdbcType="VARCHAR" property="orderdesc" />
    <result column="PAYTYPE" jdbcType="DECIMAL" property="paytype" />
    <result column="ORDERSTATUS" jdbcType="DECIMAL" property="orderstatus" />
    <result column="PRODUCTID" jdbcType="VARCHAR" property="productid" />
    <result column="MEMBERID" jdbcType="VARCHAR" property="memberid" />
    <!--和prouduct表连接-->
    <association property="product" column="productid"
                 javaType="cn.itcast.domain.Product" select="cn.itcast.dao.ProductMapper.selectByPrimaryKey">
    </association>
    <!--和member表连接-->
    <association property="member" column="memberid"
                 javaType="cn.itcast.domain.Member" select="cn.itcast.dao.MemberMapper.selectByPrimaryKey">
    </association>
    <collection property="travellers" column="id" ofType="cn.itcast.domain.Traveller"
       select="cn.itcast.dao.TravellerMapper.findByOrdersId"></collection>
  </resultMap>
  <select id="findById" resultMap="findByid">
      select * from  Orders where id =#{ordersId}
  </select>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORDERNUM, ORDERTIME, PEOPLECOUNT, ORDERDESC, PAYTYPE, ORDERSTATUS, PRODUCTID, 
    MEMBERID
  </sql>
  <select id="selectByExample" parameterType="cn.itcast.domain.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ORDERS
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ORDERS
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.domain.OrdersExample">
    delete from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.domain.Orders">
    insert into ORDERS (ID, ORDERNUM, ORDERTIME, 
      PEOPLECOUNT, ORDERDESC, PAYTYPE, 
      ORDERSTATUS, PRODUCTID, MEMBERID
      )
    values (#{id,jdbcType=VARCHAR}, #{ordernum,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP}, 
      #{peoplecount,jdbcType=DECIMAL}, #{orderdesc,jdbcType=VARCHAR}, #{paytype,jdbcType=DECIMAL}, 
      #{orderstatus,jdbcType=DECIMAL}, #{productid,jdbcType=VARCHAR}, #{memberid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.domain.Orders">
    insert into ORDERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="ordernum != null">
        ORDERNUM,
      </if>
      <if test="ordertime != null">
        ORDERTIME,
      </if>
      <if test="peoplecount != null">
        PEOPLECOUNT,
      </if>
      <if test="orderdesc != null">
        ORDERDESC,
      </if>
      <if test="paytype != null">
        PAYTYPE,
      </if>
      <if test="orderstatus != null">
        ORDERSTATUS,
      </if>
      <if test="productid != null">
        PRODUCTID,
      </if>
      <if test="memberid != null">
        MEMBERID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null">
        #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="peoplecount != null">
        #{peoplecount,jdbcType=DECIMAL},
      </if>
      <if test="orderdesc != null">
        #{orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=DECIMAL},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=DECIMAL},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null">
        #{memberid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.domain.OrdersExample" resultType="java.lang.Long">
    select count(*) from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ORDERS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.ordernum != null">
        ORDERNUM = #{record.ordernum,jdbcType=VARCHAR},
      </if>
      <if test="record.ordertime != null">
        ORDERTIME = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.peoplecount != null">
        PEOPLECOUNT = #{record.peoplecount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderdesc != null">
        ORDERDESC = #{record.orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.paytype != null">
        PAYTYPE = #{record.paytype,jdbcType=DECIMAL},
      </if>
      <if test="record.orderstatus != null">
        ORDERSTATUS = #{record.orderstatus,jdbcType=DECIMAL},
      </if>
      <if test="record.productid != null">
        PRODUCTID = #{record.productid,jdbcType=VARCHAR},
      </if>
      <if test="record.memberid != null">
        MEMBERID = #{record.memberid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ORDERS
    set ID = #{record.id,jdbcType=VARCHAR},
      ORDERNUM = #{record.ordernum,jdbcType=VARCHAR},
      ORDERTIME = #{record.ordertime,jdbcType=TIMESTAMP},
      PEOPLECOUNT = #{record.peoplecount,jdbcType=DECIMAL},
      ORDERDESC = #{record.orderdesc,jdbcType=VARCHAR},
      PAYTYPE = #{record.paytype,jdbcType=DECIMAL},
      ORDERSTATUS = #{record.orderstatus,jdbcType=DECIMAL},
      PRODUCTID = #{record.productid,jdbcType=VARCHAR},
      MEMBERID = #{record.memberid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.domain.Orders">
    update ORDERS
    <set>
      <if test="ordernum != null">
        ORDERNUM = #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        ORDERTIME = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="peoplecount != null">
        PEOPLECOUNT = #{peoplecount,jdbcType=DECIMAL},
      </if>
      <if test="orderdesc != null">
        ORDERDESC = #{orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        PAYTYPE = #{paytype,jdbcType=DECIMAL},
      </if>
      <if test="orderstatus != null">
        ORDERSTATUS = #{orderstatus,jdbcType=DECIMAL},
      </if>
      <if test="productid != null">
        PRODUCTID = #{productid,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null">
        MEMBERID = #{memberid,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.domain.Orders">
    update ORDERS
    set ORDERNUM = #{ordernum,jdbcType=VARCHAR},
      ORDERTIME = #{ordertime,jdbcType=TIMESTAMP},
      PEOPLECOUNT = #{peoplecount,jdbcType=DECIMAL},
      ORDERDESC = #{orderdesc,jdbcType=VARCHAR},
      PAYTYPE = #{paytype,jdbcType=DECIMAL},
      ORDERSTATUS = #{orderstatus,jdbcType=DECIMAL},
      PRODUCTID = #{productid,jdbcType=VARCHAR},
      MEMBERID = #{memberid,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
</mapper>